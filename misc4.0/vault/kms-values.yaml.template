global:
  tlsDisable: false
ui:
  enabled: true
server:
  extraSecretEnvironmentVars:
    - envName: AWS_SECRET_ACCESS_KEY
      secretName: vault-aws-kms-credentials
      secretKey: aws_secret_access_key
    - envName: AWS_ACCESS_KEY_ID
      secretName: vault-aws-kms-credentials
      secretKey: aws_access_key_id      
  image:
    tag: "1.4.2"
  extraVolumes:
    - type: 'secret'
      name: 'vault-tls'
      path: '/etc/vault-tls'        
  ha:
    enabled: true
    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true

        listener "tcp" {
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file="/etc/vault-tls/vault-tls/tls.crt"
          tls_key_file="/etc/vault-tls/vault-tls/tls.key"
          tls_client_ca_file="/etc/vault-tls/vault-tls/ca.crt"          
        }

        seal "awskms" {
          region     = "${region}"
          kms_key_id = "${key_id}"
        }

        storage "raft" {
          path = "/vault/data"
  
          retry_join {
            leader_api_addr = "https://vault-0.vault-internal:8200"
            leader_ca_cert_file = "/etc/vault-tls/vault-tls/ca.crt"
            #leader_client_cert_file = "/etc/vault-tls/vault-tls/tls.crt"
            #leader_client_key_file = "/etc/vault-tls/vault-tls/tls.key"
          }

          retry_join {
            leader_api_addr = "https://vault-1.vault-internal:8200"
            leader_ca_cert_file = "/etc/vault-tls/vault-tls/ca.crt"
            #leader_client_cert_file = "/etc/vault-tls/vault-tls/tls.crt"
            #leader_client_key_file = "/etc/vault-tls/vault-tls/tls.key"
          }
                  
          retry_join {
            leader_api_addr = "https://vault-2.vault-internal:8200"
            leader_ca_cert_file = "/etc/vault-tls/vault-tls/ca.crt"
            #leader_client_cert_file = "/etc/vault-tls/vault-tls/tls.crt"
            #leader_client_key_file = "/etc/vault-tls/vault-tls/tls.key"
          }

        }

        log_level = "debug"

        service_registration "kubernetes" {}  
  affinity: |
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: vault
              app.kubernetes.io/instance: vault
              component: server
          topologyKey: failure-domain.beta.kubernetes.io/zone        
injector:
  agentImage:
    tag: "1.4.2"
