apiVersion: apps/v1
kind: Deployment
metadata:
  name: rac-dnsserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rac-dnsserver
  template:
    metadata:
      labels:
        app: rac-dnsserver
      annotations:
        k8s.v1.cni.cncf.io/networks: | 
         [{
            "name": "rac-pub1-nw",
            "ips": ["172.16.1.25/32"],
            "interface": "eth1"
          },{
            "name": "rac-priv1-nw",
            "ips": ["192.168.17.25/32"],
            "interface": "eth2"
          }]
    spec:
      volumes:
      - name: shells
        configMap:
          name: oracle-rac-shells
          defaultMode: 0777      
      dnsConfig: 
        searches:
          - example.com  
      enableServiceLinks: false
      automountServiceAccountToken: false                   
      hostname: rac-dns
      imagePullSecrets:
      - name: raffa-quay      
      containers:
      - name: rac-dnsserver      
        image: quay.io/raffaelespazzoli/oracle/rac-dnsserver@sha256:f3406655b3a51442b7ba26e4d80ab016a0bd126d472c6308245aaf4bec3ebb39
        # command:
        #   - /usr/bin/sleep
        #   - 24h 
        env:
        - name: CONFIG_DNS_SERVER_FILE
          value: shells/setupDNSServer.sh
        - name: SETUP_DNS_CONFIG_FILES
          value: "setup_true"
        - name: DOMAIN_NAME
          value: example.com
        - name: RAC_NODE_NAME_PREFIXP
          value: racnodep
        - name: WEBMIN_ENABLED
          value: "false"        
        ports:
        - containerPort: 53
          name: dns
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - AUDIT_WRITE
            - CAP_SYS_CHROOT
        volumeMounts:
        - name: shells
          mountPath: /opt/scripts/startup/shells
        livenessProbe:
          exec:
            command: ["/bin/bash",-c, "if nslookup racnodepc1-scan; then exit 0; else exit 1; fi"]
          periodSeconds: 30
          timeoutSeconds: 3 
          failureThreshold: 240