{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {  },
  "variables": {  },
  "resources": [ 
    {
     "apiVersion": "2015-06-15",
     "type": "Microsoft.Network/publicIPAddresses",
     "name": "infrande-external",
     "location": "[resourceGroup().location]",
     "properties": {
       "publicIPAllocationMethod": "Dynamic",
       "dnsSettings": {
         "domainNameLabel": "[parameters('dnsNameforLBIP')]"
       }
     }
	},
	{
	   "apiVersion": "2015-06-15",
	   "name": "[parameters('lbName')]",
	   "type": "Microsoft.Network/loadBalancers",
	   "location": "[resourceGroup().location]",
	   "dependsOn": [
	     "[concat('Microsoft.Network/publicIPAddresses/', 'infranode-external')]"
	   ],
	   "properties": {
	     "frontendIPConfigurations": [
	       {
	         "name": "infranode-external",
	         "properties": {
	           "publicIPAddress": {
	             "id": "infranode-external"
	           }
	         }
	       }		       
	     ],
	     "backendAddressPools": [
	       {
		         "name": "infranode-pool"
		   }		       
	     ],
	     "inboundNatRules": [
	       {
	         "name": "RDP-VM0",
	         "properties": {
	           "frontendIPConfiguration": {
	             "id": "master-external"
	           },
	           "protocol": "tcp",
	           "frontendPort": 50001,
	           "backendPort": 3389,
	           "enableFloatingIP": false
	         }
	       },
	       {
	         "name": "RDP-VM1",
	         "properties": {
	           "frontendIPConfiguration": {
	             "id": "[variables('frontEndIPConfigID')]"
	           },
	           "protocol": "tcp",
	           "frontendPort": 50002,
	           "backendPort": 3389,
	           "enableFloatingIP": false
	         }
	       }
	     ],
	     "loadBalancingRules": [
	       {
	         "name": "infranode-external-lb",
	         "properties": {
	           "frontendIPConfiguration": {
	             "id": "infranode-external"
	           },
	           "backendAddressPool": {
	             "id": "infranode-pool"
	           },
	           "protocol": "tcp",
	           "frontendPort": 80,
	           "backendPort": 80,
	           "enableFloatingIP": false,
	           "idleTimeoutInMinutes": 5,
	           "probe": {
	             "id": "infranode-probe"
	           }
	         }
	       }		       
	     ],
	     "probes": [
	       {
	         "name": "infranode-probe",
	         "properties": {
	           "protocol": "tcp",
	           "port": 80,
	           "intervalInSeconds": 5,
	           "numberOfProbes": 2
	         }		       
	       }
	     ]
	   }
	},
	{
	   "apiVersion": "2015-06-15",
	   "type": "Microsoft.Network/networkInterfaces",
	   "name": "[concat(parameters('infranide-nic'), copyindex())]",
	   "location": "[resourceGroup().location]",
	   "copy": {
	     "name": "nicLoop",
	     "count": "[variables('numberOfInfranodeInstances')]"
	   },
	   "dependsOn": [
	     "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
	     "[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
	   ],
	   "properties": {
	     "ipConfigurations": [
	       {
	         "name": "ipconfig1",
	         "properties": {
	           "privateIPAllocationMethod": "Dynamic",
	           "subnet": {
	             "id": "[variables('subnetRef')]"
	           },
	           "loadBalancerBackendAddressPools": [
	             {
	               "id": "[concat(variables('lbID'), '/backendAddressPools/infranode-pool')]"
	             }
	           ],
	           "loadBalancerInboundNatRules": [
	             {
	               "id": "[concat(variables('lbID'),'/inboundNatRules/RDP-VM', copyindex())]"
	             }
	           ]
	         }
	       }
	     ]
	   }
	},
	{
	   "apiVersion": "2015-06-15",
	   "type": "Microsoft.Compute/virtualMachines",
	   "name": "[infranode, copyindex())]",
	   "copy": {
	     "name": "virtualMachineLoop",
	     "count": "[variables('numberOfInfranodeInstances')]"
	   },
	   "location": "[resourceGroup().location]",
	   "dependsOn": [
	     "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
	     "[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]",
	     "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
	   ],
	   "properties": {
	     "availabilitySet": {
	       "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
	     },
	     "hardwareProfile": {
	       "vmSize": "[parameters('vmSize')]"
	     },
	     "osProfile": {
	       "computerName": "[concat(parameters('infranode-nic'), copyIndex())]",
	       "adminUsername": "[parameters('adminUsername')]",
	       "adminPassword": "[parameters('adminPassword')]"
	     },
	     "storageProfile": {
	       "imageReference": {
	         "publisher": "[parameters('imagePublisher')]",
	         "offer": "[parameters('imageOffer')]",
	         "sku": "[parameters('imageSKU')]",
	         "version": "latest"
	       },
	       "osDisk": {
	         "name": "osdisk",
	         "vhd": {
	           "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/','osdisk', copyindex(), '.vhd')]"
	         },
	         "caching": "ReadWrite",
	         "createOption": "FromImage"
	       }
	     },
	     "networkProfile": {
	       "networkInterfaces": [
	         {
	           "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('infranode-nic'),copyindex()))]"
	         }
	       ]
	     },
	     "diagnosticsProfile": {
	       "bootDiagnostics": {
	          "enabled": "true",
	          "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
	       }
	     }
	   }
	}	
  ],
  "outputs": {  }
}