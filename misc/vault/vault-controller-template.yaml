apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: vault-controller
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: vault-controller
  spec:
    replicas: 3
    selector:
      run: vault-controller
    template:
      metadata:
        labels:
          run: vault-controller
      spec:
        containers:
        - env:
          - name: VAULT_TOKEN
            value: ${VAULT_CONTROLLER_TOKEN}
          - name: VAULT_ADDR
            value: https://vault:8200
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBERNETES_SERVICE
            value: vault-controller
          - name: CERT_BACKEND
            value: intermediate-ca
          - name: CERT_ROLE
            value: kubernetes-vault
          image: boostport/kubernetes-vault:0.2.0
          imagePullPolicy: IfNotPresent
          name: vault-controller 
- apiVersion: v1
  kind: Service
  metadata:
    name: vault-controller
    labels:
      run: vault-controller
  spec:
    clusterIP: None
    selector:
      run: vault-controller
    # Kubernetes-Vault does not need to expose any ports through a headless service.
    # However, there's a Kubernetes bug where the pods won't be registered in the API,
    # so we need to use this hack. See kubernetes/kubernetes#32796
    ports:
      - name: port
        port: 80 
parameters:
- name: VAULT_CONTROLLER_TOKEN
  required: true                         
